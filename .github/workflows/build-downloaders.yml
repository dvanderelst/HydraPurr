# .github/workflows/build-downloaders.yml
name: Build Desktop Downloaders

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    defaults:
      run:
        working-directory: BluetoothDownloader

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps from requirements.txt (best-effort)
        run: |
          [ -f requirements.txt ] && pip install -r requirements.txt || true

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pyserial

      # ---------- BUILD ----------
      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: >
          pyinstaller
          --onefile
          --name Downloader
          --add-data "library;library"
          --hidden-import serial
          --hidden-import serial.tools.list_ports
          Downloader.py

      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: >
          pyinstaller
          --onefile
          --target-arch universal2
          --name Downloader
          --add-data "library:library"
          --hidden-import serial
          --hidden-import serial.tools.list_ports
          Downloader.py

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: >
          pyinstaller
          --onefile
          --name Downloader
          --add-data "library:library"
          --hidden-import serial
          --hidden-import serial.tools.list_ports
          Downloader.py

      # ---------- LAUNCHERS & PACKAGING ----------
      - name: Create double-click launcher (macOS)
        if: runner.os == 'macOS'
        run: |
          cat > dist/Downloader.command << 'EOF'
          #!/bin/sh
          DIR="$(cd "$(dirname "$0")" && pwd)"
          open -a Terminal "$DIR/Downloader"
          EOF
          chmod +x dist/Downloader dist/Downloader.command
          (cd dist && zip -9 -j Downloader-macOS.zip Downloader Downloader.command)

      - name: Create double-click launcher (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          echo @echo off> dist\Downloader.bat
          echo set DIR=%%~dp0>> dist\Downloader.bat
          echo start cmd /k "%%DIR%%Downloader.exe">> dist\Downloader.bat

      - name: Package (Windows zip)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path dist/Downloader.exe, dist/Downloader.bat `
                           -DestinationPath dist/Downloader-Windows.zip -Force

      - name: Create double-click launcher (Linux)
        if: runner.os == 'Linux'
        run: |
          cat > dist/Downloader.sh << 'EOF'
          #!/usr/bin/env bash
          DIR="$(cd "$(dirname "$0")" && pwd)"
          for T in "x-terminal-emulator -e" "gnome-terminal --" "konsole -e" "xfce4-terminal -e" "xterm -e"; do
            BIN=${T%% *}
            if command -v $BIN >/dev/null 2>&1; then
              exec $T "$DIR/Downloader"
            fi
          done
          exec "$DIR/Downloader"
          EOF
          chmod +x dist/Downloader dist/Downloader.sh

          cat > dist/Downloader.desktop << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=Downloader
          Comment=HydraPurr Bluetooth Downloader
          Exec=sh -c '"$PWD/Downloader.sh"'
          Icon=utilities-terminal
          Terminal=false
          Categories=Utility;
          EOF

          (cd dist && tar -czf Downloader-linux.tar.gz Downloader Downloader.sh Downloader.desktop)

      # ---------- UPLOAD BUILD ARTIFACTS ----------
      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: Downloader-Windows
          path: BluetoothDownloader/dist/Downloader-Windows.zip

      - name: Upload artifact (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: Downloader-macOS
          path: BluetoothDownloader/dist/Downloader-macOS.zip

      - name: Upload artifact (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: Downloader-Linux
          path: BluetoothDownloader/dist/Downloader-linux.tar.gz

  # ---------- PUBLISH A RELEASE (tag builds only) ----------
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: List files (debug)
        run: ls -lah dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/Downloader-Windows.zip
            dist/Downloader-macOS.zip
            dist/Downloader-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
