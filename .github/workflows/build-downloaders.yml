name: Build Desktop Downloaders

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    defaults:
      run:
        working-directory: BluetoothDownloader

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # ---- Build per-OS ----
      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: >
          pyinstaller
          --onefile
          --name Downloader
          --add-data "library;library"
          --hidden-import serial
          --hidden-import serial.tools.list_ports
          Downloader.py

      - name: Build (macOS/Linux)
        if: runner.os != 'Windows'
        run: >
          pyinstaller
          --onefile
          --name Downloader
          --add-data "library:library"
          --hidden-import serial
          --hidden-import serial.tools.list_ports
          Downloader.py

      # ---- Add double-click launchers ----
      - name: Create double-click launcher (macOS)
        if: runner.os == 'macOS'
        run: |
          cat > dist/Downloader.command << 'EOF'
          #!/bin/sh
          DIR="$(cd "$(dirname "$0")" && pwd)"
          open -a Terminal "$DIR/Downloader"
          EOF
          chmod +x dist/Downloader.command

      - name: Create double-click launcher (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          echo @echo off> dist\Downloader.bat
          echo set DIR=%%~dp0>> dist\Downloader.bat
          echo start cmd /k "%%DIR%%Downloader.exe">> dist\Downloader.bat

      - name: Create double-click launcher (Linux)
        if: runner.os == 'Linux'
        run: |
          cat > dist/Downloader.sh << 'EOF'
          #!/usr/bin/env bash
          DIR="$(cd "$(dirname "$0")" && pwd)"
          # Try common terminals; first one found is used
          for T in "x-terminal-emulator -e" "gnome-terminal --" "konsole -e" "xfce4-terminal -e" "xterm -e"; do
            BIN=${T%% *}
            if command -v $BIN >/dev/null 2>&1; then
              exec $T "$DIR/Downloader"
            fi
          done
          # Fallback: run directly (may not show a terminal window)
          exec "$DIR/Downloader"
          EOF
          chmod +x dist/Downloader.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Downloader-${{ runner.os }}
          path: BluetoothDownloader/dist/**

